{{- range $jobname, $job := .Values.jobs }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    iam.amazonaws.com/role: staging-opencost # TODO
  name: {{ include "parquet-exporter.releaseName" $ }}-{{ $jobname }}
  labels:
    {{- include "parquet-exporter.labels" $ | nindent 4 }}
spec:
  concurrencyPolicy: {{ $job.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit }}
  schedule: {{ $job.schedule }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit }}
  suspend: {{ $job.suspend }}
  jobTemplate:
    metadata:
      name: {{ include "parquet-exporter.releaseName" $ }}-{{ $jobname }} 
    spec:
      activeDeadlineSeconds: 3600 # TODO
      ttlSecondsAfterFinished: 14400 # TODO
      template:
        metadata:
          labels:
            app: {{ include "parquet-exporter.releaseName" $ }}
            cron: {{ $jobname }}
          name: {{ include "parquet-exporter.releaseName" $ }}-{{ $jobname }} # TODO Is this a duplicate of the jobtemplates.metadata.name
        spec: # TODO DUPLICATE KEY  
          {{- if hasKey $job "imagePullSecrets" }}
            imagePullSecrets:
            - name: {{ $.Release.Name }}-docker # TODO What does this do?
          {{- end }}
          {{- if and (hasKey $job "serviceAccount") (hasKey $job.serviceAccount "name") }}
            serviceAccountName: {{ $job.serviceAccount.name }}
            # TODO
            # serviceAccount: K8S_SERVICE_ACCOUNT_CHANGE_ME
            # serviceAccountName: K8S_SERVICE_ACCOUNT_NAME_CHANGE_ME
          {{- else }}
            serviceAccountName: {{ $.Release.Name}}-{{ $jobname }}
            # TODO
            # serviceAccount: K8S_SERVICE_ACCOUNT_CHANGE_ME
            # serviceAccountName: K8S_SERVICE_ACCOUNT_NAME_CHANGE_ME
          {{- end }}
          {{- if hasKey $job "securityContext" }}
            {{- if $job.securityContext.runAsUser }}
            securityContext:
              runAsUser: {{ $job.securityContext.runAsUser }}
              {{- if $job.securityContext.runAsGroup }}
              runAsGroup: {{ $job.securityContext.runAsGroup }}
              {{- end }}
              {{- if $job.securityContext.fsGroup }}
              fsGroup: {{ $job.securityContext.fsGroup }}
              {{- end }}
            {{- end }}
          {{- end }}
          terminationMessagePath: /dev/termination-log # TODO
          terminationMessagePolicy: File # TODO
          containers:
            - image: {{ $job.image.repository }}:{{ $job.image.tag }}
              imagePullPolicy: {{ $job.image.imagePullPolicy }}
              name: {{ $jobname }}
              
              {{- with $job.env }}
              env:
    {{ toYaml . | indent 12 }}
              {{- end }}
              {{- with $job.envFrom }}
              envFrom:
    {{ toYaml . | indent 12 }}
              {{- end }}       
              {{- with $job.resources }}
              resources:
    {{ toYaml . | indent 14 }}
              {{- end }}
          {{- with $job.dnsConfig }}
            dnsConfig:
    {{ toYaml . | indent 14 }}
          {{- end }}
          {{- if $job.securityContext.runAsGroup }}
            dnsPolicy: {{ $job.dnsPolicy }}
          {{- end }}
          {{- if $job.securityContext.runAsGroup }}
            restartPolicy: {{ $job.restartPolicy }}
          {{- end }}                         
          {{- if $job.terminationGracePeriodSeconds }}
            terminationGracePeriodSeconds: {{ $job.terminationGracePeriodSeconds}}
          {{- end-}} 
