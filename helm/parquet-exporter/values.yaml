replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""



jobs:
  <job_name>: 
    concurrencyPolicy: <concurrency_policy>
    failedJobsHistoryLimit: <failed_history_limit>
    schedule: <schedule>
    successfulJobsHistoryLimit: <successful_limit>
    suspend: <true/false>
    imagePullSecrets:
    - username: fred
      password: password
      registry: docker.io
    serviceAccount:
      name: <serviceaccount_name>
    securityContext:
      runAsUser: <security_context_user>
      runAsGroup: <security_context_group>
      fsGroup: <security_context_fs_group>
    image:
      repository: <image_repo>
      tag: <image_tag>
      imagePullPolicy: <pull_policy>
    # optional env vars
    env:
    - name: ECHO_VAR
      value: "busybox"
    envFrom:
    - secretRef:
        name: secret_data
    - configMapRef:
        name: config_data
    resources:
      limits:
        cpu: <cpu_limit>
        memory: <memory_limit>
      requests:
        cpu: <cpu_request>
        memory: <memory_request>
    dnsConfig:
      options:
      - name: single-request-reopen
      - name: ndots
        value: "2"
    dnsPolicy: <dns_policy>
    restartPolicy: <restart_policy>

    
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
